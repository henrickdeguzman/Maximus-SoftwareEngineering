/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg124guirevision;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author renziverdb
 */
public class UpdateAppointment extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs;
    String appId = "";
    
    String patId = "";
    SimpleDateFormat twelve = new SimpleDateFormat("HH:mm");
    SimpleDateFormat twentyfour = new SimpleDateFormat("hh:mm a");
    /**
     * Creates new form AddPatient
     */
    public UpdateAppointment() {
        initComponents();
    }
    public UpdateAppointment(String patId,String appId, String ln, String fn, String mi, String contact)
    {
        initComponents();
        
        this.patId = patId;
        this.appId = appId;
        String patientID = "";
        Date sched = null;
        Time time24 = null;
        String time12 = "";
        try
        {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            String url = "jdbc:derby://localhost:1527/Dental Clinic";
            String user = "maximus";
            String pass = "maximus123";
            con = DriverManager.getConnection(url, user, pass);
            Statement stmt = con.createStatement();
            rs = stmt.executeQuery("SELECT * FROM APPOINTMENT ORDER BY PATIENT_ID");
            while(rs.next())
            {
                if(rs.getString("APP_ID").equals(appId))
                {
                    patientID = rs.getString("PATIENT_ID");
                    sched = rs.getDate("VISIT_DATE");
                    time24 = rs.getTime("VISIT_TIME");
                    time12 = twentyfour.format(time24);
                }
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        System.out.println(patientID);
        System.out.println(time12);
        String[] time = time12.split(":");
        String hr = time[0];
        String half = time[1];
        String[] time2 = half.split(" ");
        String min = time2[0];
        String meridiem = time2[1];
        System.out.println(hr+min+meridiem);
        patid.setText(patientID);
        lastname.setText(ln);
        firstname.setText(fn);
        middle.setText(mi);
        contactnumber.setText(contact);
        jDateChooser1.setDate(sched);
        jComboBox2.setSelectedItem(hr);
        jComboBox3.setSelectedItem(min);
        jComboBox1.setSelectedItem(meridiem);
    }
    private void UpdateData(String ln, String fn, String mi, String contact, Date date, String time, String appointID)
    {
        try
        {
            String qry = "UPDATE APPOINTMENT SET LASTNAME = ?, FIRSTNAME = ?, MIDDLEINITIAL = ?, CONTACT_NUMBER = ?, VISIT_DATE = ?, VISIT_TIME = ? WHERE APP_ID = ?";
            PreparedStatement pstmt = con.prepareStatement(qry);
            pstmt.setString(1, ln);
            pstmt.setString(2, fn);
            pstmt.setString(3, mi);
            pstmt.setString(4, contact);
            pstmt.setDate(5, date);
            pstmt.setString(6, time);
            pstmt.setString(7, appointID);
            pstmt.executeUpdate();
            
             String ts = ZonedDateTime.now().format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.FULL, FormatStyle.MEDIUM));
                        
            String qryh = "INSERT INTO HISTORY(DATE, EVENT) VALUES(?,?)";
                        PreparedStatement pstmth = con.prepareStatement(qryh);
                        pstmth.setString(1, ts);
                        pstmth.setString(2,"Updated Appointment Record for  Patient # "+patId+" Name: " +ln+ ", "+fn+".");
                        pstmth.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "The data has successfully updated!");
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()
    {

        HeaderPatient = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        GoBackBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        saveApointment = new javax.swing.JButton();
        TimeOfCheckup = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        mid = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        lastname = new javax.swing.JLabel();
        firstname = new javax.swing.JLabel();
        middle = new javax.swing.JLabel();
        contactnumber = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        patid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Appointment | Diamse - Montero Dental Clinic");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeaderPatient.setBackground(new java.awt.Color(52, 152, 219));

        jLabel1.setBackground(new java.awt.Color(239, 249, 247));
        jLabel1.setFont(new java.awt.Font("Avenir", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(239, 249, 247));
        jLabel1.setText("DIAMSE - MONTERO ");

        jLabel2.setFont(new java.awt.Font("Avenir", 0, 18)); // NOI18N
        jLabel2.setText("D  E  N  T  A  L    C  L  I  N  I  C  ");

        GoBackBtn.setText("BACK");
        GoBackBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                GoBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HeaderPatientLayout = new javax.swing.GroupLayout(HeaderPatient);
        HeaderPatient.setLayout(HeaderPatientLayout);
        HeaderPatientLayout.setHorizontalGroup(
            HeaderPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPatientLayout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addGroup(HeaderPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPatientLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(GoBackBtn)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPatientLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(143, 143, 143))))
        );
        HeaderPatientLayout.setVerticalGroup(
            HeaderPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPatientLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HeaderPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(GoBackBtn))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(HeaderPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.setBackground(new java.awt.Color(41, 128, 185));

        jLabel5.setFont(new java.awt.Font("Avenir", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Date:");

        saveApointment.setText("SAVE CHANGES");
        saveApointment.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveApointmentActionPerformed(evt);
            }
        });

        TimeOfCheckup.setFont(new java.awt.Font("Avenir", 0, 13)); // NOI18N
        TimeOfCheckup.setForeground(new java.awt.Color(255, 255, 255));
        TimeOfCheckup.setText("Time of check-up:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        mid.setForeground(new java.awt.Color(255, 255, 255));
        mid.setText(":");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        jLabel3.setFont(new java.awt.Font("Avenir", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("UPDATE APPOINTMENT");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        lastname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lastname.setForeground(new java.awt.Color(255, 255, 255));
        lastname.setText("sample");

        firstname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        firstname.setForeground(new java.awt.Color(255, 255, 255));
        firstname.setText("sample");

        middle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        middle.setForeground(new java.awt.Color(255, 255, 255));
        middle.setText("sample");

        contactnumber.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        contactnumber.setForeground(new java.awt.Color(255, 255, 255));
        contactnumber.setText("sample");

        jLabel4.setFont(new java.awt.Font("Avenir", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Patient ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("First Name:");

        jLabel6.setFont(new java.awt.Font("Avenir", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Last Name:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Middle Initial:");

        jLabel7.setFont(new java.awt.Font("Avenir", 0, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact Number:");

        patid.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        patid.setForeground(new java.awt.Color(255, 255, 255));
        patid.setText("sample");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TimeOfCheckup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contactnumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(middle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(patid, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveApointment)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel3)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(patid, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(middle))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(contactnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeOfCheckup)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mid)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(saveApointment)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 700, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void saveApointmentActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveApointmentActionPerformed
    {//GEN-HEADEREND:event_saveApointmentActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to save changes ?", "", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION)
        {
            String timeApp = "";
            try
            {
                String time = jComboBox2.getSelectedItem()+":"+jComboBox3.getSelectedItem()+" "+jComboBox1.getSelectedItem();
                timeApp = twelve.format(twentyfour.parse(time))+":00";
                
                Class.forName("org.apache.derby.jdbc.ClientDriver");
                String url = "jdbc:derby://localhost:1527/Dental Clinic";
                String user = "maximus";
                String pass = "maximus123";
                con = DriverManager.getConnection(url, user, pass);
                Statement stmt = con.createStatement();
                rs = stmt.executeQuery("SELECT * FROM APPOINTMENT ORDER BY APP_ID");
            }
            catch(Exception e)
            {}
            if(jDateChooser1.getDate() != null)
            {
                java.sql.Date sqlDate = new java.sql.Date(jDateChooser1.getDate().getTime());
                Calendar current = Calendar.getInstance();
                Date today = new Date((current.getTime()).getTime());
            
                String[] currentArray = current.getTime().toString().split(" ");
                String[] currentTime = currentArray[3].split(":");
                String hrs = currentTime[0];
                String mins = currentTime[1];
             
                int selectedhr = Integer.parseInt((String)jComboBox2.getSelectedItem());
                int selectedmin = Integer.parseInt((String)jComboBox3.getSelectedItem());
            
                if (jComboBox1.getSelectedItem() == "PM" && jComboBox2.getSelectedItem() != "12"){
                    selectedhr += 12;
                }
                    
                if(sqlDate.compareTo(today) > 0)
                {             
                    Boolean overlap = false;

                    try{
                        while(rs.next()){
                            Date temp = new Date(rs.getDate("VISIT_DATE").getTime());
                            if(sqlDate.toString().equals(temp.toString())){
                                String[] tableArray = rs.getTime("VISIT_TIME").toString().split(":");
                                int tablehour = Integer.parseInt(tableArray[0]);
                                int tablemin = Integer.parseInt(tableArray[1]);
                            
                                if (selectedhr == tablehour && selectedmin == tablemin){
                                    overlap = true;
                                    break;
                                }    
                            }
                        }
                        if(overlap){
                            JOptionPane.showMessageDialog(null,"Overlapping with another appointment");
                        }
                        else{
                            UpdateData(lastname.getText(), firstname.getText(), middle.getText(), contactnumber.getText(), sqlDate, timeApp,appId);
                            PatientRecords dr = new PatientRecords();
                            new RowPopup(dr);
                            new RowPopup2(dr);
                            dr.setVisible(true);
                            super.dispose();
                        }
                    } 
                    catch (SQLException ex) {
                        System.out.println(ex);
                    }
                }
                else if (sqlDate.toString().equals(today.toString())){
                    if (selectedhr > Integer.parseInt(hrs) || (selectedhr == Integer.parseInt(hrs) && selectedmin > Integer.parseInt(mins))){
                        Boolean overlap = false;

                        try{
                            while(rs.next()){
                                Date temp = new Date(rs.getDate("VISIT_DATE").getTime());
                                if(sqlDate.toString().equals(temp.toString())){
                                    String[] tableArray = rs.getTime("VISIT_TIME").toString().split(":");
                                    int tablehour = Integer.parseInt(tableArray[0]);
                                    int tablemin = Integer.parseInt(tableArray[1]);
                            
                                    if (selectedhr == tablehour && selectedmin == tablemin){
                                        overlap = true;
                                        break;
                                    }    
                                }
                            }
                            if(overlap){
                                JOptionPane.showMessageDialog(null,"Overlapping with another appointment");
                            }
                            else{
                                UpdateData(lastname.getText(), firstname.getText(), middle.getText(), contactnumber.getText(), sqlDate, timeApp,appId);
                                PatientRecords dr = new PatientRecords();
                                new RowPopup(dr);
                                new RowPopup2(dr);
                                dr.setVisible(true);
                                super.dispose();
                            }
                        }
                    
                        catch (SQLException ex) {
                            System.out.println(ex);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Cannot set an appointment below current date!");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Cannot set an appointment below current date!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please fill up the date!");
            }
        }
    }//GEN-LAST:event_saveApointmentActionPerformed

    private void GoBackBtnActionPerformed(java.awt.event.ActionEvent evt)                                          
    {                                              
        PatientRecords dr = new PatientRecords();
        new RowPopup(dr);
        new RowPopup2(dr);
        dr.setVisible(true);
        super.dispose();
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton GoBackBtn;
    private javax.swing.JPanel HeaderPatient;
    private javax.swing.JLabel TimeOfCheckup;
    private javax.swing.JLabel contactnumber;
    private javax.swing.JLabel firstname;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lastname;
    private javax.swing.JLabel mid;
    private javax.swing.JLabel middle;
    private javax.swing.JLabel patid;
    private javax.swing.JButton saveApointment;
    // End of variables declaration                   
}
